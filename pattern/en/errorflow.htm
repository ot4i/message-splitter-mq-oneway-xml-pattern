<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en-us" xml:lang="en-us">
<head><!-- 

(C) COPYRIGHT International Business Machines Corp., 2009

All Rights Reserved * Licensed Materials - Property of IBM

-->
<meta http-equiv="Content-Type" content="text/html; charset=utf-8"/>
<meta name="copyright" content="Copyright IBM Corporation 2008"/>
<meta name="DC.Rights.Owner" content="Copyright IBM Corporation 2008"/>
<meta name="abstract" content="Use the Message Splitter for WebSphere MQ: one-way (for XML) pattern to accept requests from many client applications on a single queue, and to return responses to the correct client by using transactional flows and persistent WebSphere MQ messages."/>
<!-- Licensed Materials Property of IBM -->
<!-- US Government Users Restricted Rights -->
<!-- Use, duplication or disclosure restricted by -->
<!-- GSA ADP Schedule Contract with IBM Corp. -->
	<link rel="stylesheet" type="text/css" href="../css/style.css" />
<title>Error subflow for the Message Splitter for WebSphere MQ: one-way (for XML) pattern</title>
<body id="mbi.mrrc.relmq.errorflow">
<div><h1 class="topictitle1">Error subflow for the <span>Message Splitter for WebSphere MQ: one-way 
(for XML)</span> pattern</h1>
<div>
<p class="shortdesc">If an error occurs, use the Error subflow to route the error message.</p>
<p>To route the error message, use one of the following actions:</p>
<ul>
<li>Save any message elements that cannot be routed onto a separate bad message queue and continue 
processing further elements</li>
<li>Cancel the transaction and roll back the input message</li>
</ul>
</div>
<p>Any failure in the Routing flow directs the propagated message, containing one message element, to the 
Failure terminal of the Route subflow. The error status is recorded in 
<span class="filepath">Environment.PatternVariables.FailureStatus</span> and the number of bad elements 
is incremented.</p>
<p>Choose a <span class="msobjprop">Bad message action</span> to determine the action to take following a 
failure:</p>
<ul>
<li><span class="msobjpropval">Save</span>
<ol>
<li>The Failure node is connected to an MQOutput node and the message element is written to the bad 
message queue. Control is returned to the processing loop in the Message Splitter Compute node and 
processing continues.</li>
<li>When all records are processed, the Message Splitter Compute node passes control to the Error subflow, 
where a check is made to determine if any bad message elements are saved. If bad message elements are saved, 
and error messages are required, an error message is produced that indicates the number of elements in 
error.</li>
</ol>
</li>
<li><span class="msobjpropval">Cancel</span>
<ol>
<li>The Failure node of the Route subflow is not connected and routing errors are passed back to the 
Message Splitter Compute node, which detects the failure status and generates an exception. Any exceptions, 
other than routing failures, cause the <span class="msobjpropval">Cancel</span> action to occur. It is 
assumed that all these exceptions are irrecoverable and it is not safe to continue processing.</li>
<li>If error messages are required, an error message is prepared and written to the error queue.
Details of the exception are written as an XML message. The details include:
	<ul>
	<li>Broker name</li>
	<li>Flow name</li>
	<li>Time stamp</li>
	<li>Summary of the exception data</li>
	</ul>
</li>
<li>A user error is produced to roll back the input message and any message elements that have already been 
processed. In this case, backout handling must be in place within the WebSphere MQ infrastructure; for example, 
by using a backout queue.
<p>Backout does not occur on exceptions that occur after all of the message elements have been successfully 
written. This type of exception might occur in error messages or log messages.</p></li>
</ol>
</li>
</ul>
</div>
<a href="overview.htm#anchor1" title="Back">Back to the Message Splitter for WebSphere MQ: one-way (for XML) pattern specification</a>
</body></html>
