<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="zh-cn" xml:lang="zh-cn">
<head><!-- 

(C) COPYRIGHT International Business Machines Corp., 2009

All Rights Reserved * Licensed Materials - Property of IBM

-->
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
<meta name="copyright" content="Copyright IBM Corporation 2008" />
<meta name="DC.Rights.Owner" content="Copyright IBM Corporation 2008" />
<meta name="abstract" content="使用 Message Splitter 模式在单个队列上接受来自多个客户机应用程序的请求，并将响应返回到正确的客户机。"/>
<!-- Licensed Materials Property of IBM -->
<!-- US Government Users Restricted Rights -->
<!-- Use, duplication or disclosure restricted by -->
<!-- GSA ADP Schedule Contract with IBM Corp. -->
<link rel="stylesheet" type="text/css" href="../../css/ibmdita.css" />
<link rel="stylesheet" type="text/css" href="../../css/bip4.css" />
<title>Message Splitter 模式</title>
<script language="JavaScript" src="../../help/LiveHelp.js"> </script></head>
<body id="mbi.mrrc.overview">
<h1 class="topictitle1">Message Splitter 模式</h1>
<div><p class="shortdesc">使用 Message Splitter 模式将大的 XML消息拆分为较小元素，以供一个或多个目标处理。</p>
<div class="image"><img src="splitter.gif" alt="该图显示模式的行为。" align="middle"/></div></div>
<div class="section"><h2 class="sectiontitle">上下文</h2><p></p>
<p class="MsoNormal">您可以与其他应用程序共享某个时间段内某个应用程序中累积的信息。典型示例可以是一天内累积的销售数据，也可以是从合作伙伴处收到的信息更新。在指定时间段内累积的数据会作为单个大型消息发送。结束目标应用程序（组）上的日处理要求单独处理每一个元素。</p>
<p class="MsoNormal">另外，应用程序可能生成包含若干必须分发的记录的消息；例如，某个应用程序维护并分发引用数据。<span
	style="mso-spacerun:yes"></span></p>
</div>
<div class="section"><h2 class="sectiontitle">问题</h2>
<p>包含重复结构和处理结构的大型消息会导致占用过多内存，这可能会影响其他消息处理并导致代理故障。该模式根据定义的路由规则来解决将大型消息元素路由至不同目标的问题。</p>
<div class="section"><h2 class="sectiontitle">选择指导信息</h2>
<p>对于存储大量业务事物的信息并通过批处理的方式将该信息传送至一个或多个目标应用程序的应用程序，请使用此模式。可以使用它处理大型消息，并且不会占用过多内存。</p>
<p>该模式可用于以下情况：源应用程序或目标应用程序无法执行或处理近乎实时的服务调用，或者出于业务的原因而要求批处理信息。</p>
</div>
<div class="section"><h2 class="sectiontitle">解决方案</h2></div>
<p> 解决方案用于实现使用可变消息树的消息流，以便能够在处理可重复元素时对其进行删除。部分解析支持根据需求解析单个元素，并且，由于这些元素在完成时会被删除，从而避免了由于元素数量的增长而导致的内存树线性增长。在抽取每个元素时，会将其路由至适当的目标应用程序。</p>
<p>输入消息和所有输出消息都将在单个事务中进行处理；所有输出消息都是持久的。读取 XML 输入消息失败会导致整个事务失败，但是处理单个元素时发生错误可能会将失败的元素添加到队列供以后处理，或导致整个事务失败。
</p>
</div></body>
</html>
