<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="ja-jp" xml:lang="ja-jp">
<head><!-- 

(C) COPYRIGHT International Business Machines Corp., 2009

All Rights Reserved * Licensed Materials - Property of IBM

-->
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
<meta name="copyright" content="Copyright IBM Corporation 2008" />
<meta name="DC.Rights.Owner" content="Copyright IBM Corporation 2008" />
<meta name="abstract" content="メッセージ・スプリッター・パターンを使用して、多数のクライアント・アプリケーションからの要求を 1 つのキューで受け入れ、正しいクライアントに応答を返します。"/>
<!-- Licensed Materials Property of IBM -->
<!-- US Government Users Restricted Rights -->
<!-- Use, duplication or disclosure restricted by -->
<!-- GSA ADP Schedule Contract with IBM Corp. -->
<link rel="stylesheet" type="text/css" href="../../css/ibmdita.css" />
<link rel="stylesheet" type="text/css" href="../../css/bip4.css" />
<title>メッセージ・スプリッター・パターン</title>
<script language="JavaScript" src="../../help/LiveHelp.js"> </script></head>
<body id="mbi.mrrc.overview">
<h1 class="topictitle1">メッセージ・スプリッター・パターン</h1>
<div><p class="shortdesc">メッセージ・スプリッター・パターンを使用すると、1 つ以上のターゲットで処理するために、大きな XML メッセージを複数の小さなエレメントに分割することができます。</p>
<div class="image"><img src="splitter.gif" alt="パターンの動作を示す図。" align="middle"/></div></div>
<div class="section"><h2 class="sectiontitle">コンテキスト</h2><p></p>
<p class="MsoNormal">ある期間に 1 つのアプリケーションの中で累積された情報を、他のアプリケーションと共有したい場合があります。
典型的な例は、一日の累積売上データや、パートナーから受け取る情報更新などです。
データは特定の期間にわたって累積され、1 つの大きなメッセージとして伝送されます。
一日の終わりに 1 つ以上のターゲット・アプリケーションで処理する際、各エレメントを個別に処理する必要があります。</p>
<p class="MsoNormal">あるいは、配布される必要のある多数のレコードを含む 1 つのメッセージがアプリケーションによって生成される場合があります。例えば、1 つのアプリケーションが参照データを保守して配布するような場合です。<span
	style="mso-spacerun:yes"></span></p>
</div>
<div class="section"><h2 class="sectiontitle">問題</h2>
<p>反復処理構造を含む大きなメッセージにより、メモリーが過度に使用され、他のメッセージ処理が影響を受ける結果としてブローカーに障害が発生する可能性があります。
このパターンは、大きなメッセージに含まれる複数のエレメントを、定義済みのルーティング規則に従ってさまざまなターゲットにルーティングするという課題を扱います。</p>
<div class="section"><h2 class="sectiontitle">選択についてのガイダンス</h2>
<p>多数のビジネス・トランザクションに関する情報を保管し、1 つ以上のターゲット・アプリケーションにこの情報を一括して伝送するようなアプリケーションに対して、このパターンを使用します。
これを使用すると、メモリーを過度に使用せずに大きなメッセージを扱うことができます。</p>
<p>ソース・アプリケーションまたはターゲット・アプリケーションが準リアルタイム・サービス呼び出しを発行/処理できない場合や、業務上の理由で情報の一括処理が必要な場合に、このパターンを使用できます。
</p>
</div>
<div class="section"><h2 class="sectiontitle">ソリューション</h2></div>
<p> ソリューションとして、可変的なメッセージ・ツリーを使用するメッセージ・フローを実装します。これにより、反復するエレメントを処理する際にエレメントを削除できます。
必要に応じて、部分的な構文解析を使って個々のエレメントを構文解析できます。これらのエレメントは処理が完了すると削除されるため、メモリー内のツリーはエレメント数に比例して大きくなることがありません。
エレメントが抽出されるごとに、適切なターゲット・アプリケーションにルーティングされます。
</p>
<p>入力メッセージとすべての出力メッセージは単一トランザクションで処理されます。すべての出力メッセージは永続的です。
XML 入力メッセージの読み取りに失敗した場合はトランザクション全体が失敗します。一方、単一のエレメントの処理でエラーが発生した場合は、失敗したエレメントをキューに追加して後で処理することも、トランザクション全体を失敗させることもできます。
</p>
</div></body>
</html>
