package org.eclipse.jet.compiled;

import org.eclipse.jet.JET2Context;
import org.eclipse.jet.JET2Template;
import org.eclipse.jet.JET2Writer;
import org.eclipse.jet.taglib.RuntimeTagElement;
import org.eclipse.jet.taglib.TagInfo;

public class _jet_declarecacheesql implements JET2Template {
    private static final String _jetns_c = "org.eclipse.jet.controlTags"; //$NON-NLS-1$

    public _jet_declarecacheesql() {
        super();
    }

    private static final String NL = System.getProperty("line.separator"); //$NON-NLS-1$
    
    private static final TagInfo _td_c_if_1_1 = new TagInfo("c:if", //$NON-NLS-1$
            1, 1,
            new String[] {
                "test", //$NON-NLS-1$
            },
            new String[] {
                "boolean($root/brokerSchema)", //$NON-NLS-1$
            } );
    private static final TagInfo _td_c_if_3_1 = new TagInfo("c:if", //$NON-NLS-1$
            3, 1,
            new String[] {
                "test", //$NON-NLS-1$
            },
            new String[] {
                "string-length($root/brokerSchema) > 0", //$NON-NLS-1$
            } );
    private static final TagInfo _td_c_get_5_15 = new TagInfo("c:get", //$NON-NLS-1$
            5, 15,
            new String[] {
                "select", //$NON-NLS-1$
            },
            new String[] {
                "$root/brokerSchema", //$NON-NLS-1$
            } );
    private static final TagInfo _td_c_get_8_18 = new TagInfo("c:get", //$NON-NLS-1$
            8, 18,
            new String[] {
                "select", //$NON-NLS-1$
            },
            new String[] {
                "$root/@patternName", //$NON-NLS-1$
            } );
    private static final TagInfo _td_c_get_8_63 = new TagInfo("c:get", //$NON-NLS-1$
            8, 63,
            new String[] {
                "select", //$NON-NLS-1$
            },
            new String[] {
                "$root/@patternVersion", //$NON-NLS-1$
            } );
    private static final TagInfo _td_c_get_9_23 = new TagInfo("c:get", //$NON-NLS-1$
            9, 23,
            new String[] {
                "select", //$NON-NLS-1$
            },
            new String[] {
                "$root/@patternName", //$NON-NLS-1$
            } );
    private static final TagInfo _td_c_get_10_26 = new TagInfo("c:get", //$NON-NLS-1$
            10, 26,
            new String[] {
                "select", //$NON-NLS-1$
            },
            new String[] {
                "$root/@patternVersion", //$NON-NLS-1$
            } );
    private static final TagInfo _td_c_get_24_29 = new TagInfo("c:get", //$NON-NLS-1$
            24, 29,
            new String[] {
                "select", //$NON-NLS-1$
            },
            new String[] {
                "$root/routingcontext", //$NON-NLS-1$
            } );

    public void generate(final JET2Context context, final JET2Writer __out) {
        JET2Writer out = __out;
        RuntimeTagElement _jettag_c_if_1_1 = context.getTagFactory().createRuntimeTag(_jetns_c, "if", "c:if", _td_c_if_1_1); //$NON-NLS-1$ //$NON-NLS-2$
        _jettag_c_if_1_1.setRuntimeParent(null);
        _jettag_c_if_1_1.setTagInfo(_td_c_if_1_1);
        _jettag_c_if_1_1.doStart(context, out);
        while (_jettag_c_if_1_1.okToProcessBody()) {
            // Tag exists 
            RuntimeTagElement _jettag_c_if_3_1 = context.getTagFactory().createRuntimeTag(_jetns_c, "if", "c:if", _td_c_if_3_1); //$NON-NLS-1$ //$NON-NLS-2$
            _jettag_c_if_3_1.setRuntimeParent(_jettag_c_if_1_1);
            _jettag_c_if_3_1.setTagInfo(_td_c_if_3_1);
            _jettag_c_if_3_1.doStart(context, out);
            while (_jettag_c_if_3_1.okToProcessBody()) {
                // and has a value
                out.write("BROKER SCHEMA ");  //$NON-NLS-1$        
                RuntimeTagElement _jettag_c_get_5_15 = context.getTagFactory().createRuntimeTag(_jetns_c, "get", "c:get", _td_c_get_5_15); //$NON-NLS-1$ //$NON-NLS-2$
                _jettag_c_get_5_15.setRuntimeParent(_jettag_c_if_3_1);
                _jettag_c_get_5_15.setTagInfo(_td_c_get_5_15);
                _jettag_c_get_5_15.doStart(context, out);
                _jettag_c_get_5_15.doEnd();
                out.write(NL);         
                _jettag_c_if_3_1.handleBodyContent(out);
            }
            _jettag_c_if_3_1.doEnd();
            _jettag_c_if_1_1.handleBodyContent(out);
        }
        _jettag_c_if_1_1.doEnd();
        out.write("--  Generated by ");  //$NON-NLS-1$        
        RuntimeTagElement _jettag_c_get_8_18 = context.getTagFactory().createRuntimeTag(_jetns_c, "get", "c:get", _td_c_get_8_18); //$NON-NLS-1$ //$NON-NLS-2$
        _jettag_c_get_8_18.setRuntimeParent(null);
        _jettag_c_get_8_18.setTagInfo(_td_c_get_8_18);
        _jettag_c_get_8_18.doStart(context, out);
        _jettag_c_get_8_18.doEnd();
        out.write(" Version ");  //$NON-NLS-1$        
        RuntimeTagElement _jettag_c_get_8_63 = context.getTagFactory().createRuntimeTag(_jetns_c, "get", "c:get", _td_c_get_8_63); //$NON-NLS-1$ //$NON-NLS-2$
        _jettag_c_get_8_63.setRuntimeParent(null);
        _jettag_c_get_8_63.setTagInfo(_td_c_get_8_63);
        _jettag_c_get_8_63.doStart(context, out);
        _jettag_c_get_8_63.doEnd();
        out.write(NL);         
        out.write("--  $MQSI patternName=");  //$NON-NLS-1$        
        RuntimeTagElement _jettag_c_get_9_23 = context.getTagFactory().createRuntimeTag(_jetns_c, "get", "c:get", _td_c_get_9_23); //$NON-NLS-1$ //$NON-NLS-2$
        _jettag_c_get_9_23.setRuntimeParent(null);
        _jettag_c_get_9_23.setTagInfo(_td_c_get_9_23);
        _jettag_c_get_9_23.doStart(context, out);
        _jettag_c_get_9_23.doEnd();
        out.write(" MQSI$");  //$NON-NLS-1$        
        out.write(NL);         
        out.write("--  $MQSI patternVersion=");  //$NON-NLS-1$        
        RuntimeTagElement _jettag_c_get_10_26 = context.getTagFactory().createRuntimeTag(_jetns_c, "get", "c:get", _td_c_get_10_26); //$NON-NLS-1$ //$NON-NLS-2$
        _jettag_c_get_10_26.setRuntimeParent(null);
        _jettag_c_get_10_26.setTagInfo(_td_c_get_10_26);
        _jettag_c_get_10_26.doStart(context, out);
        _jettag_c_get_10_26.doEnd();
        out.write(" MQSI$");  //$NON-NLS-1$        
        out.write(NL);         
        out.write(NL);         
        out.write("DECLARE CacheQueueTable SHARED ROW;");  //$NON-NLS-1$        
        out.write(NL);         
        out.write("CREATE COMPUTE MODULE Invalidatecache");  //$NON-NLS-1$        
        out.write(NL);         
        out.write(NL);         
        out.write("\tCREATE FUNCTION Main() RETURNS BOOLEAN");  //$NON-NLS-1$        
        out.write(NL);         
        out.write("\tBEGIN");  //$NON-NLS-1$        
        out.write(NL);         
        out.write("\tSET CacheQueueTable.valid value = null;");  //$NON-NLS-1$        
        out.write(NL);         
        out.write("\tEND;");  //$NON-NLS-1$        
        out.write(NL);         
        out.write("\tEND MODULE;");  //$NON-NLS-1$        
        out.write(NL);         
        out.write("\t");  //$NON-NLS-1$        
        out.write(NL);         
        out.write("CREATE DATABASE MODULE CheckCache");  //$NON-NLS-1$        
        out.write(NL);         
        out.write("\tCREATE Function Main() RETURNS BOOLEAN");  //$NON-NLS-1$        
        out.write(NL);         
        out.write("\tBEGIN");  //$NON-NLS-1$        
        out.write(NL);         
        out.write("\tDECLARE CONTEXT CHARACTER '");  //$NON-NLS-1$        
        RuntimeTagElement _jettag_c_get_24_29 = context.getTagFactory().createRuntimeTag(_jetns_c, "get", "c:get", _td_c_get_24_29); //$NON-NLS-1$ //$NON-NLS-2$
        _jettag_c_get_24_29.setRuntimeParent(null);
        _jettag_c_get_24_29.setTagInfo(_td_c_get_24_29);
        _jettag_c_get_24_29.doStart(context, out);
        _jettag_c_get_24_29.doEnd();
        out.write("';");  //$NON-NLS-1$        
        out.write(NL);         
        out.write("-- Read the database table into memory when CacheQueues.valid field is set to null.");  //$NON-NLS-1$        
        out.write(NL);         
        out.write("-- Do this atomically to protect against problems when threads > 1");  //$NON-NLS-1$        
        out.write(NL);         
        out.write(NL);         
        out.write("\t\tROUTING : BEGIN ATOMIC");  //$NON-NLS-1$        
        out.write(NL);         
        out.write("\t\t\tIF CacheQueueTable.valid IS NULL THEN");  //$NON-NLS-1$        
        out.write(NL);         
        out.write("\t\tSET  CacheQueueTable.DestinationData[] =  ");  //$NON-NLS-1$        
        out.write(NL);         
        out.write("\t\t       \t(");  //$NON-NLS-1$        
        out.write(NL);         
        out.write("\t\t       \t\tSELECT S.QUEUE_MANAGER, S.QUEUE_NAME ,S.VARIABLE1, S.VARIABLE2");  //$NON-NLS-1$        
        out.write(NL);         
        out.write("\t\t       \t\tFROM Database.ROUTING_TABLE as S ");  //$NON-NLS-1$        
        out.write(NL);         
        out.write("\t\t       \t\tWHERE ");  //$NON-NLS-1$        
        out.write(NL);         
        out.write("\t\t       \t\t\tS.ROUTING_CONTEXT = CONTEXT     \t\t\t");  //$NON-NLS-1$        
        out.write(NL);         
        out.write("\t\t       \t ); ");  //$NON-NLS-1$        
        out.write(NL);         
        out.write("\t\t         \t ");  //$NON-NLS-1$        
        out.write(NL);         
        out.write("\t\t\tSET CacheQueueTable.valid = true;");  //$NON-NLS-1$        
        out.write(NL);         
        out.write("\t\t\tEND IF;");  //$NON-NLS-1$        
        out.write(NL);         
        out.write("\t\tEND ROUTING;\t\t");  //$NON-NLS-1$        
        out.write(NL);         
        out.write(NL);         
        out.write("-- \tAt this point the CacheQueues should be full of the data with possible destinations\t\t");  //$NON-NLS-1$        
        out.write(NL);         
        out.write("\tEND;");  //$NON-NLS-1$        
        out.write(NL);         
        out.write("END MODULE;");  //$NON-NLS-1$        
        out.write(NL);         
        out.write(NL);         
        out.write(NL);         
        out.write(NL);         
        out.write(NL);         
        out.write(NL);         
        out.write(NL);         
        out.write(NL);         
    }
}
