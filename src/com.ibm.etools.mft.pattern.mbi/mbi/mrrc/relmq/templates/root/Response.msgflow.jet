<?xml version="1.0" encoding="UTF-8"?>
<ecore:EPackage xmi:version="2.0"
    xmlns:xmi="http://www.omg.org/XMI" 
    xmlns:ComIbmCompute.msgnode="ComIbmCompute.msgnode" 
    xmlns:ComIbmFlowOrder.msgnode="ComIbmFlowOrder.msgnode" 
    xmlns:ComIbmMQGet.msgnode="ComIbmMQGet.msgnode" 
    xmlns:ComIbmMQInput.msgnode="ComIbmMQInput.msgnode" 
    xmlns:ComIbmMQReply.msgnode="ComIbmMQReply.msgnode"
    xmlns:<c:get select="$root/@brokerSchema1"/><c:get select = "$root/@error"/>.subflow=
    "<c:get select="$root/@brokerSchema2"/><c:get select = "$root/@error"/>.subflow" 
    <c:if test="$root/loggingRequired = 'true'"> 
    xmlns:<c:get select="$root/@brokerSchema1"/><c:get select = "$root/@log"/>.subflow=
    "<c:get select="$root/@brokerSchema2"/><c:get select = "$root/@log"/>.subflow" 
    </c:if>
    xmlns:<c:get select="$root/@brokerSchema1"/><c:get select = 
    "$root/@responseprocessor"/>.subflow="<c:get select="$root/@brokerSchema2"/><c:get select = "$root/@responseprocessor"/>.subflow"
    xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore" 
    xmlns:eflow="http://www.ibm.com/wbi/2005/eflow"
    xmlns:utility="http://www.ibm.com/wbi/2005/eflow_utility" 
    nsURI="<c:get select="$root/@brokerSchema2"/><c:get select="$root/@response"/>.msgflow"
    nsPrefix="<c:get select="$root/@brokerSchema1"/><c:get select="$root/@response"/>.msgflow">
  <eClassifiers xmi:type="eflow:FCMComposite" name="FCMComposite_1">
    <eSuperTypes href="http://www.ibm.com/wbi/2005/eflow#//FCMBlock"/>
<c:if test="$root/errorMessageRequired = 'true'">
    <eStructuralFeatures xmi:type="ecore:EAttribute" xmi:id="Property.ErrorLoggingOn" name="ErrorLoggingOn" lowerBound="1" defaultValueLiteral="true">
      <eType xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
    </eStructuralFeatures>
</c:if>
<c:if test="$root/loggingRequired = 'true'"> 
    <eStructuralFeatures xmi:type="ecore:EAttribute" xmi:id="Property.ResponseLoggingOn" name="ResponseLoggingOn" lowerBound="1" defaultValueLiteral="true">
      <eType xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
    </eStructuralFeatures>
</c:if>
    <translation xmi:type="utility:TranslatableString" key="<c:get select="$root/@response"/>" bundleName="<c:get select="$root/@brokerSchema2"/><c:get select="$root/@response"/>" pluginId="<c:get select="$root/@projectname"/>"/>
    <colorGraphic16 xmi:type="utility:GIFFileGraphic" 
    resourceName="platform:/plugin/<c:get select="$root/@projectname"/>/icons/full/obj16/<c:get select="$root/@response"/>.gif"/>
    <colorGraphic32 xmi:type="utility:GIFFileGraphic" 
    resourceName="platform:/plugin/<c:get select="$root/@projectname"/>/icons/full/obj30/<c:get select="$root/@response"/>.gif"/>
   	<shortDescription xmi:type="utility:ConstantString" string="<c:get select="$root/shortDescription"/>"/>
    <longDescription xmi:type="utility:ConstantString" 
    string="Generated by <c:get select="$root/@patternName"/> Version <c:get select="$root/@patternVersion"/>
    &#xD;&#xA;<c:get select="$root/longDescription"/>
    &#xD;&#xA;$MQSI patternName=<c:get select="$root/@patternName"/> MQSI$
    &#xD;&#xA;$MQSI patternVersion=<c:get select="$root/@patternVersion"/> MQSI$
    "/>
    <version xmi:type="utility:ConstantString" string="1"/>
    <composition>
      <nodes xmi:type="ComIbmMQInput.msgnode:FCMComposite_1" xmi:id="FCMComposite_1_7" location="-3,135" 
 queueName="<c:get select = "$root/queueprefix"/><c:get select="$root/responseQueue"/><c:get select = "$root/queuesuffix"/>" 


<c:choose>
<c:when test="$root/validationofResponse = 'None'">    
     >
</c:when>
<c:otherwise>
      validateTiming="immediate"
      validateMaster="<c:get select="$root/validationofResponse"/>"
<c:choose>
<c:when test="$root/responseDataType = 'XML'"> 
	  messageDomainProperty="XMLNSC"
      messageSetProperty="<c:get select="substring-after(substring-after($root/responseMessageSet,'/'),'/')"/>">
</c:when>
<c:when test="$root/responseDataType = 'MIME'"> 
	  messageDomainProperty="MIME">
</c:when>
<c:when test="$root/responseDataType = 'binaryData'"> 
	  messageDomainProperty="MRM"
      messageSetProperty="<c:get select="substring-after(substring-after($root/responseMessageSet,'/'),'/')"/>"
      messageTypeProperty="<c:get select="$root/responseMessageType"/>"
      messageFormatProperty="<c:get select="$root/responseMessageFormat"/>">
</c:when>
<c:when test="$root/inputDataType = 'textData'"> 
	  messageDomainProperty="MRM"
      messageSetProperty="<c:get select="substring-after(substring-after($root/responseMessageSet,'/'),'/')"/>"
      messageTypeProperty="<c:get select="$root/responseMessageType"/>"
      messageFormatProperty="<c:get select="$root/responseMessageFormat"/>">   
</c:when>
</c:choose>  
</c:otherwise>
</c:choose>

        <translation xmi:type="utility:ConstantString" string="Response"/>
      </nodes>
      <nodes xmi:type="ComIbmMQGet.msgnode:FCMComposite_1" xmi:id="FCMComposite_1_10" location="398,57" 
      queueName="<c:get select = "$root/queueprefix"/><c:get select="$root/storeQueue"/><c:get select = "$root/queuesuffix"/>"

	   transactionMode="no"

      copyMessage="copyEntireMessage" minimumGetBufferSize="1" getWithCorrelID="true" outputDataLocation="OutputRoot.MQMD" resultDataLocation="ResultRoot.MQMD">
        <translation xmi:type="utility:ConstantString" string="Retrieve"/>
        <shortDescription xmi:type="utility:ConstantString" string="Reads the original MQMD from the store"/>
        <longDescription xmi:type="utility:ConstantString" string="This MQ Get node reads  corresponding stored message, selected via the message correlator ID.  This message contains the original request MQMD containing the reply-to queue and queue manager name of the requestor application that was stored during the request flow"/>
      </nodes>
      <nodes xmi:type="ComIbmCompute.msgnode:FCMComposite_1" xmi:id="FCMComposite_1_11" location="561,61" 
      computeExpression="esql://routine/<c:get select="$root/@brokerSchema"/>#HandleMQGetWarning.Main">
        <translation xmi:type="utility:ConstantString" string="MQ Warning"/>
        <shortDescription xmi:type="utility:ConstantString" string="Throw exception when MQGet returns a warning"/>
        <longDescription xmi:type="utility:ConstantString" string="This node is invoked when there something goes wrong when trying to retrieve the stored MQMD.  The node constructs and throws an appropriate exception."/>
      </nodes>
      <nodes xmi:type="ComIbmCompute.msgnode:FCMComposite_1" xmi:id="FCMComposite_1_12" location="453,200" 
      computeExpression="esql://routine/<c:get select="$root/@brokerSchema"/>#HandleMissingStoredMsg.Main">
        <translation xmi:type="utility:ConstantString" string="Missing Stored Msg"/>
        <shortDescription xmi:type="utility:ConstantString" string="Throw exception to handle case of missing stored MQMD"/>
        <longDescription xmi:type="utility:ConstantString" string="This node is invoked when there is no message on the 'STORE' queue with the matching CorrelId.  The node constructs and throws an appropriate exception."/>
      </nodes>
      <nodes xmi:type="ComIbmMQReply.msgnode:FCMComposite_1" xmi:id="FCMComposite_1_13" 
      location="539,-25" 
   
      transactionMode="yes" persistenceMode="yes">

        <translation xmi:type="utility:ConstantString" string="Reply"/>
      </nodes>
      <nodes xmi:type="ComIbmCompute.msgnode:FCMComposite_1" xmi:id="FCMComposite_1_9" location="103,135" 
      computeExpression="esql://routine/<c:get select="$root/@brokerSchema"/>#SetResponseMode.Main" computeMode="destination">
        <translation xmi:type="utility:ConstantString" string="Initialise"/>
      </nodes>
      <nodes xmi:type="<c:get select="$root/@brokerSchema1"/><c:get select="$root/@responseprocessor"/>.subflow:FCMComposite_1" 
      xmi:id="FCMComposite_1_1" location="295,57">
        <translation xmi:type="utility:ConstantString" string="Response Processor"/>
      </nodes>
      <nodes xmi:type="<c:get select="$root/@brokerSchema1"/><c:get select="$root/@error"/>.subflow:FCMComposite_1" xmi:id="FCMComposite_1_2" location="114,238">
        <translation xmi:type="utility:ConstantString" string="Error"/>
      </nodes>
 <c:if test="$root/loggingRequired = 'true'">
      <nodes xmi:type="ComIbmFlowOrder.msgnode:FCMComposite_1" xmi:id="FCMComposite_1_16" location="182,136">
        <translation xmi:type="utility:ConstantString" string="Log after Reply"/>
      </nodes>      
      <nodes xmi:type="<c:get select="$root/@brokerSchema1"/><c:get select="$root/@log"/>.subflow:FCMComposite_1" 
      xmi:id="FCMComposite_1_3" location="315,242">
        <translation xmi:type="utility:ConstantString" string="Log"/>
      </nodes>
 </c:if>
      <connections xmi:type="eflow:FCMConnection" xmi:id="FCMConnection_1" targetNode="FCMComposite_1_11" sourceNode="FCMComposite_1_10" sourceTerminalName="OutTerminal.warning" targetTerminalName="InTerminal.in"/>
      <connections xmi:type="eflow:FCMConnection" xmi:id="FCMConnection_2" targetNode="FCMComposite_1_12" sourceNode="FCMComposite_1_10" sourceTerminalName="OutTerminal.noMessage" targetTerminalName="InTerminal.in"/>
      <connections xmi:type="eflow:FCMConnection" xmi:id="FCMConnection_3" targetNode="FCMComposite_1_13" sourceNode="FCMComposite_1_10" sourceTerminalName="OutTerminal.out" targetTerminalName="InTerminal.in"/>
      <connections xmi:type="eflow:FCMConnection" xmi:id="FCMConnection_4" targetNode="FCMComposite_1_9" sourceNode="FCMComposite_1_7" sourceTerminalName="OutTerminal.out" targetTerminalName="InTerminal.in"/>
      <connections xmi:type="eflow:FCMConnection" xmi:id="FCMConnection_7" targetNode="FCMComposite_1_10" sourceNode="FCMComposite_1_1" sourceTerminalName="OutTerminal.Output" targetTerminalName="InTerminal.in"/>
      <connections xmi:type="eflow:FCMConnection" xmi:id="FCMConnection_8" targetNode="FCMComposite_1_2" sourceNode="FCMComposite_1_7" sourceTerminalName="OutTerminal.catch" targetTerminalName="InTerminal.Input"/>
      <connections xmi:type="eflow:FCMConnection" xmi:id="FCMConnection_11" targetNode="FCMComposite_1_2" sourceNode="FCMComposite_1_7" sourceTerminalName="OutTerminal.failure" targetTerminalName="InTerminal.Input"/>
<c:choose>
 <c:when test="$root/loggingRequired = 'true'">
      <connections xmi:type="eflow:FCMConnection" xmi:id="FCMConnection_5" targetNode="FCMComposite_1_16" sourceNode="FCMComposite_1_9" sourceTerminalName="OutTerminal.out" targetTerminalName="InTerminal.in"/>
      <connections xmi:type="eflow:FCMConnection" xmi:id="FCMConnection_6" targetNode="FCMComposite_1_1" sourceNode="FCMComposite_1_16" sourceTerminalName="OutTerminal.first" targetTerminalName="InTerminal.Input"/>
       <connections xmi:type="eflow:FCMConnection" xmi:id="FCMConnection_10" targetNode="FCMComposite_1_3" sourceNode="FCMComposite_1_16" sourceTerminalName="OutTerminal.second" targetTerminalName="InTerminal.Input"/>
 </c:when>
 <c:otherwise>
      <connections xmi:type="eflow:FCMConnection" xmi:id="FCMConnection_9" targetNode="FCMComposite_1_1" sourceNode="FCMComposite_1_9" sourceTerminalName="OutTerminal.out" targetTerminalName="InTerminal.Input"/>
 
 </c:otherwise>
 </c:choose>
    </composition>
    <propertyOrganizer>
<c:if test="$root/errorMessageRequired = 'true'">    
      <propertyDescriptor groupName="Group.Basic" configurable="true" userDefined="true" 
      describedAttribute="Property.ErrorLoggingOn">
        <propertyName xmi:type="utility:TranslatableString" key="Property.ErrorLoggingOn" 
       bundleName="<c:get select="$root/@brokerSchema2"/><c:get select="$root/@response"/>"  pluginId="<c:get select="$root/@projectname"/>"/>
</c:if>
<c:if test="$root/loggingRequired = 'true'">     
          <propertyDescriptor groupName="Group.Basic" configurable="true" userDefined="true" describedAttribute="Property.ResponseLoggingOn">
            <propertyName xmi:type="utility:TranslatableString" key="Property.ResponseLoggingOn" 
            bundleName="<c:get select="$root/@brokerSchema2"/><c:get select="$root/@request"/>"  pluginId="<c:get select="$root/@projectname"/>"/>
          </propertyDescriptor>
</c:if>
<c:if test="$root/errorMessageRequired = 'true'">
      </propertyDescriptor>
</c:if>
    </propertyOrganizer>
    <c:if test="$root/errorMessageRequired = 'true'">
      <attributeLinks promotedAttribute="Property.ErrorLoggingOn" overriddenNodes="FCMComposite_1_2">
      <overriddenAttribute href="<c:get select="$root/@brokerSchema2"/><c:get select="$root/@error"/>.subflow#Property.ErrorLoggingOn"/>
    </attributeLinks>
</c:if>
  </eClassifiers>
</ecore:EPackage>
