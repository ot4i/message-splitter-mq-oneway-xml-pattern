<c:if test="boolean($root/brokerSchema)" >
<%-- Tag exists --%>
<c:if test="string-length($root/brokerSchema) > 0">
<%-- and has a value--%>
BROKER SCHEMA <c:get select="$root/brokerSchema"/>
</c:if>
</c:if>
--  Generated by <c:get select="$root/@patternName"/> Version <c:get select="$root/@patternVersion"/>
--  $MQSI patternName=<c:get select="$root/@patternName"/> MQSI$
--  $MQSI patternVersion=<c:get select="$root/@patternVersion"/> MQSI$

DECLARE CacheQueueTable SHARED ROW;
CREATE COMPUTE MODULE Invalidatecache

	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
	SET CacheQueueTable.valid value = null;
	END;
	END MODULE;
	
CREATE DATABASE MODULE CheckCache
	CREATE Function Main() RETURNS BOOLEAN
	BEGIN
	DECLARE CONTEXT CHARACTER '<c:get select="$root/routingcontext"/>';
-- Read the database table into memory when CacheQueues.valid field is set to null.
-- Do this atomically to protect against problems when threads > 1

		ROUTING : BEGIN ATOMIC
			IF CacheQueueTable.valid IS NULL THEN
		SET  CacheQueueTable.DestinationData[] =  
		       	(
		       		SELECT S.QUEUE_MANAGER, S.QUEUE_NAME ,S.VARIABLE1, S.VARIABLE2
		       		FROM Database.ROUTING_TABLE as S 
		       		WHERE 
		       			S.ROUTING_CONTEXT = CONTEXT     			
		       	 ); 
		         	 
			SET CacheQueueTable.valid = true;
			END IF;
		END ROUTING;		

-- 	At this point the CacheQueues should be full of the data with possible destinations		
	END;
END MODULE;







